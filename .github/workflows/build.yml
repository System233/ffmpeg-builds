name: "Build ffmpeg"

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  push:
    

  
env:
  config: --enable-shared --toolchain=msvc
  MSYS2_PATH_TYPE: inherit
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      build: ${{steps.ffmpeg.outputs.version}} != ${{github.ref_name}}
      name: ${{steps.ffmpeg.outputs.name}}
      branch: ${{steps.ffmpeg.outputs.branch}}
      version: ${{steps.ffmpeg.outputs.version}}
    steps:
      - name: Checkout FFmpeg
        id: ffmpeg
        run: |
          branch=$(git ls-remote  --head --refs --sort=-v:refname "https://github.com/FFmpeg/FFmpeg.git"|head -n 1|grep --perl-regex -e "refs/heads/\\K(.*)" --only-matching)
          version=$(echo $branch|cut -d / -f 2)
          name=ffmpeg-$version-release
          echo "::set-output name=version::$version"
          echo "::set-output name=name::$name"
          echo "::set-output name=branch::$branch"
          echo "::set-output name=zip::$name-src.zip"
      - name: Prepare Release
        if: ${{steps.ffmpeg.outputs.version}} != ${{github.ref_name}}
        run: |
          git clone --single-branch --branch "${{steps.ffmpeg.outputs.branch}}" --depth 1  "https://github.com/FFmpeg/FFmpeg.git" .
          git archive HEAD -9 -o ${{steps.ffmpeg.outputs.zip}}
          flag=0
          while IFS= read -r line 
          do 
              if [[ "$line" == *"version"* ]]
              then
                  flag=$((flag+1))
              fi
              if [[ $flag == 1 ]]
              then
                  echo $line>>Release.log
              elif [[ $flag == 2 ]]
              then
                  break
              fi
          done < Changelog
          cat Release.log
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: ${{steps.ffmpeg.outputs.version}} != ${{github.ref_name}}
        with:
          name: ${{steps.ffmpeg.outputs.name}}
          tag_name: ${{steps.ffmpeg.outputs.version}}
          body_path: Release.log
          files: |
            ${{steps.ffmpeg.outputs.zip}}
  build:
    strategy:
      matrix:
        host: [amd64]
        arch: [x86,amd64,arm,arm64]
    runs-on: windows-latest
    needs: check
    # if: ${{needs.check.outputs.build}}
    env:
      name: ${{needs.check.outputs.name}}
      version: ${{needs.check.outputs.version}}
      branch: ${{needs.check.outputs.branch}}
      zip: ${{needs.check.outputs.name}}-${{matrix.arch}}.zip
      target: ${{contains(matrix.arch,'arm')&&format('{0}_{1}',matrix.host,matrix.arch)||matrix.arch}}
    steps:
      - name: Checkout FFmpeg
        shell: bash
        run: git clone --single-branch --branch "${{env.branch}}" --depth 1  "https://github.com/FFmpeg/FFmpeg.git" .
      - uses: msys2/setup-msys2@v2
        with:
          install: >-
            diffutils
            make
            zip
      - uses: ilammy/setup-nasm@v1
        if: ${{!contains(matrix.arch,'arm')}}
      - name: Remove MSYS2 link
        shell: msys2 {0}
        run: rm $(which link)
      - name: Setup MSVC
        shell: bash
        id: msvc
        run: |
          echo "::set-output name=installationPath::$(vswhere -all -legacy -property installationPath)"
      - name: Build FFmpeg
        shell: cmd
        run: |
          call "${{steps.msvc.outputs.installationPath}}\VC\Auxiliary\Build\vcvarsall.bat" ${{env.target}}
          msys2 -c "./configure ${{env.config}} --arch=${{matrix.arch}};make -j$(nproc);make install prefix=dist"
        env:
          config: ${{env.config}} ${{contains(matrix.arch,'arm')&&'--enable-cross-compile --disable-asm'||''}}
      - name: Prepare Release
        shell: msys2 {0}
        run: |
          cd dist
          zip -9 ../${{env.zip}} -r .
          cd ..
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{env.name}}
          tag_name: ${{env.version}}
          files: |
            ${{env.zip}}